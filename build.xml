<project name="traveling_salesman_problem" basedir="." default="main">

    <property name="src.dir"      value="src"/>
    <property name="report.dir"   value="report"/>
    <property name="build.dir"    value="build"/>
    <property name="classes.dir"  value="${build.dir}/classes"/>
    <property name="jar.dir"      value="${build.dir}/jar"/>
    <property name="lib.dir"      value="lib"/>
    <property name="main-class"   value="gna.NearestNeighborSolver"/>
    <property name="NI-class"     value="gna.NearestNeighborSolver"/>
    <property name="SI-class"     value="gna.SmallestIncreaseSolver"/>
    <property name="MSTI-class"   value="gna.MinimalSpanningTreeSolver"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}" input="${input}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>
    
    <target name="test" depends="compile">
       <junit printsummary="true" failureproperty="junit.failure" fork="true">
          <classpath>
             <path refid="classpath"/>
             <path location="${build.dir}/classes"/>
	  </classpath>
	  <test name="gna.tests.TSPTest"/>
	  <formatter type="plain" usefile="false" />
       </junit>
       <fail if="junit.failure" message="Unit test(s) failed."/>
    </target>
    
    <target name="check-pdf-exist">
        <pathconvert property="pdf.file.found" setonempty="false" pathsep=" ">
            <path>
                <fileset dir="${report.dir}" includes="*.pdf" />
            </path>
        </pathconvert>
    </target>
   
    <target name="release" depends="compile, check-pdf-exist">
      <zip destfile="${build.dir}/firstname_lastname.zip">
        <zipfileset dir="${src.dir}" includes="**/*.java"/>
        <zipfileset dir="${report.dir}" includes="*.pdf"/>
      </zip>
      <fail unless="pdf.file.found" message="Report PDF not found. Please place your report in the 'report/' directory."/>
    </target>

    <target name="main" depends="clean,run"/>
    
    <target name="nearestneighbor" depends="clean,jar">
        <java fork="true" classname="${NI-class}" input="${input}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>
    
    <target name="smallestincrease" depends="clean,jar">
        <java fork="true" classname="${SI-class}" input="${input}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>
    
    <target name="minimalspanningtree" depends="clean,jar">
        <java fork="true" classname="${MSTI-class}" input="${input}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>
    
</project>

